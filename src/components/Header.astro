---
import { getRelativeLocaleUrl } from 'astro:i18n'
import { getLangFromUrl, useTranslations} from '../i18n/utils.ts'
import LanguagePicker from "./LanguagePicker.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { currentLocale } = Astro;
const isInternalLink = (url) => {
  return url.startsWith("#") || url.startsWith(`${window.location.origin}/`);
};


const navItems = [
  {
    title: t('nav.#experience'),
    label: "experience",
    url: isInternalLink("#experience") ? "#experience" : getRelativeLocaleUrl(currentLocale, "#experience"),

  },
  {
    title: t('nav.#projects'),
    label: "projects",
    url: isInternalLink("#projects") ? "#projects" : getRelativeLocaleUrl(currentLocale, "#projects"),
  },
  {
    title: t('nav.#stack'),
    label: "stack",
    url: isInternalLink("#stack") ? "#stack" : getRelativeLocaleUrl(currentLocale, "#stack"),
  },
  {
    title: t('nav.#about'),
    label: "about",
    url: isInternalLink("#about") ? "#about" : getRelativeLocaleUrl(currentLocale, "#about"),
  },
  {
    title: t('nav.#contact'),
    label: "contact",
    url: isInternalLink("#home") ? "#home" : getRelativeLocaleUrl(currentLocale, "#home"),
  },
]
---

<!-- <header class="fixed top-0 z-10 w-full">
  <nav class="bg-gradient-to-r from-[#091525] to-black text-white">
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
      <h2 class="flex items-center space-x-3 rtl:space-x-reverse">
        <img src="/logo.svg" class="h-8" alt="representative character" />
          <span class="self-center text-2xl font-semibold whitespace-nowrap text-primary-400">MatuDev</span>
      </h2>
      <div class="flex items-center md:order-2 space-x-1 md:space-x-0 rtl:space-x-reverse">
          <LanguagePicker />
          <button id="nav-toggle" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm rounded-lg md:hidden focus:outline-none focus:ring-2"  aria-expanded="false">
            <span class="sr-only">Open main menu</span>
            <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
            </svg>
        </button>
      </div>
      <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar">
        <ul class="flex flex-col font-medium p-4 md:p-0 mt-4 rounded-lg md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0">
          {
            navItems.map((link) => (
              <li>
                <a
                  class="block py-2 px-3 md:p-0 text-primary-400 md:hover:text-secondary "
                  aria-label={link.label}
                  href={link.url}
                >
                  {link.title}
                </a>
              </li>
            ))
          }
          
        </ul>
      </div>
    </div>
  </nav>
</header> -->

<header class="fixed top-0 z-10 w-full">
  <nav class="bg-gradient-to-r from-[#091525] to-black text-white">
    <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
      <h2 class="flex items-center space-x-3 rtl:space-x-reverse">
        <img src="/logo.svg" class="h-8" alt="representative character" />
        <span class="self-center text-2xl font-semibold whitespace-nowrap text-primary-400">MatuDev</span>
      </h2>
      <div class="flex items-center md:order-2 space-x-1 md:space-x-0 rtl:space-x-reverse">
        <LanguagePicker />
        <button id="nav-toggle" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm rounded-lg md:hidden focus:outline-none focus:ring-2" aria-expanded="false">
          <span class="sr-only">Open main menu</span>
          <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
          </svg>
        </button>
      </div>
      <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar">
        <ul class="flex flex-col font-medium p-4 md:p-0 mt-4 rounded-lg md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0">
          {
            navItems.map((link) => (
            <li>
              <a
                class="block py-2 px-3 md:p-0 text-primary-400 md:hover:text-secondary "
                aria-label={link.label}
                href={link.url}
              >
                {link.title}
              </a>
            </li>
            ))
          }
        </ul>
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const navToggle = document.getElementById('nav-toggle');
    const navbar = document.getElementById('navbar');

    navToggle.addEventListener('click', function () {
      navbar.classList.toggle('hidden');
    });

    document.addEventListener('click', function (event) {
      const target = event.target as Node;
      if (!navbar.contains(target) && !navToggle.contains(target)) {
        navbar.classList.add('hidden');
      }
    });

    // Prevent LanguagePicker from interfering with the navToggle
    const languageLinks = document.querySelectorAll('.language-link');
    languageLinks.forEach(function(link) {
      link.addEventListener('click', function(event) {
        event.stopPropagation(); // Prevent the click event from bubbling up to document
      });
    });

  });
</script>